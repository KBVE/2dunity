name: 2D Unity Build

# Triggers for {main} branch
on: 
  workflow_dispatch: {}
  #pull_request: {}
  push: { branches: [main] }

jobs:
  # [START] -> [WebGL] 
  # Build the WebGL Assembly and then deploy the WebGL to Github Pages

  # [START] -> [WebGL] -> Build()
  buildWebGL:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - 2DUnity
        unityVersion:
          - 2021.3.14f1
        targetPlatform:
          - WebGL
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true
          token: ${{ secrets.UNITY_PAT  }}
          submodules: true
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key:
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{
            hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-
      - uses: game-ci/unity-test-runner@v2
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}
      - uses: game-ci/unity-builder@v2.1.2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v2
        with:
          name: build-WebGL
          path: build/WebGL
  # [END] -> [WebGL] -> Build()
  #
  # [START] -> [WebGL] -> Deploy()
  deployPages:
    needs: buildWebGL
    name: Deploy to Github Pages ðŸš€
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: build-WebGL
          path: build
      
      - name: Create CNAME
        uses: finnp/create-file-action@master
        env:
          FILE_NAME: "build/WebGL/CNAME"
          FILE_DATA: "2dunity.kbve.com"


      - name: Create nojekyll
        uses: finnp/create-file-action@master
        env:
          FILE_NAME: "build/WebGL/.nojekyll"
          FILE_DATA: ""

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: build/WebGL
  # [END] -> [WebGL] -> Deploy()
  #
  # [END] -> [WebGL]
